{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Downloads\\\\MOOD_MIRROR-main\\\\MOOD_MIRROR-main\\\\src\\\\components\\\\Camera.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState, useEffect } from 'react';\nimport Webcam from 'react-webcam';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Camera = ({\n  onStream\n}) => {\n  _s();\n  const webcamRef = useRef(null);\n  const canvasRef = useRef(null);\n  const [dominantEmotion, setDominantEmotion] = useState(null);\n  useEffect(() => {\n    const intervalId = setInterval(capture, 1000); // Capture frame every second\n    return () => clearInterval(intervalId); // Cleanup on component unmount\n  }, []);\n  const capture = async () => {\n    if (webcamRef.current && canvasRef.current) {\n      const imageSrc = webcamRef.current.getScreenshot();\n      try {\n        const response = await axios.post('http://localhost:5000/analyze_emotion', {\n          image: imageSrc.split(',')[1] // remove data:image/jpeg;base64,\n        });\n        if (response.data.error) {\n          console.error(response.data.error);\n        } else {\n          const emotions = response.data;\n          const dominant = Object.keys(emotions).reduce((a, b) => emotions[a] > emotions[b] ? a : b);\n          setDominantEmotion(dominant);\n\n          // Draw green box around the face\n          const context = canvasRef.current.getContext('2d');\n          const {\n            videoWidth,\n            videoHeight\n          } = webcamRef.current.video;\n          canvasRef.current.width = videoWidth;\n          canvasRef.current.height = videoHeight;\n          context.clearRect(0, 0, videoWidth, videoHeight);\n          context.strokeStyle = 'green';\n          context.lineWidth = 3;\n\n          // Assuming the face occupies the central portion for simplicity\n          const faceX = videoWidth * 0.25;\n          const faceY = videoHeight * 0.25;\n          const faceWidth = videoWidth * 0.5;\n          const faceHeight = videoHeight * 0.5;\n          context.strokeRect(faceX, faceY, faceWidth, faceHeight);\n        }\n      } catch (error) {\n        console.error('An error occurred while detecting emotion.', error);\n      }\n    }\n  };\n  useEffect(() => {\n    if (webcamRef.current) {\n      onStream(webcamRef.current.video.srcObject);\n    }\n  }, [webcamRef, onStream]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: 'relative'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Webcam, {\n      audio: false,\n      ref: webcamRef,\n      screenshotFormat: \"image/jpeg\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      style: {\n        position: 'absolute',\n        top: 0,\n        left: 0\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), dominantEmotion && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Dominant Emotion: \", dominantEmotion]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_s(Camera, \"vpMcQIyQBS1TE5FvFPufSylCmg4=\");\n_c = Camera;\nexport default Camera;\nvar _c;\n$RefreshReg$(_c, \"Camera\");","map":{"version":3,"names":["React","useRef","useState","useEffect","Webcam","axios","jsxDEV","_jsxDEV","Camera","onStream","_s","webcamRef","canvasRef","dominantEmotion","setDominantEmotion","intervalId","setInterval","capture","clearInterval","current","imageSrc","getScreenshot","response","post","image","split","data","error","console","emotions","dominant","Object","keys","reduce","a","b","context","getContext","videoWidth","videoHeight","video","width","height","clearRect","strokeStyle","lineWidth","faceX","faceY","faceWidth","faceHeight","strokeRect","srcObject","style","position","children","audio","ref","screenshotFormat","fileName","_jsxFileName","lineNumber","columnNumber","top","left","_c","$RefreshReg$"],"sources":["C:/Users/DELL/Downloads/MOOD_MIRROR-main/MOOD_MIRROR-main/src/components/Camera.js"],"sourcesContent":["import React, { useRef, useState, useEffect } from 'react';\nimport Webcam from 'react-webcam';\nimport axios from 'axios';\n\nconst Camera = ({ onStream }) => {\n  const webcamRef = useRef(null);\n  const canvasRef = useRef(null);\n  const [dominantEmotion, setDominantEmotion] = useState(null);\n\n  useEffect(() => {\n    const intervalId = setInterval(capture, 1000); // Capture frame every second\n    return () => clearInterval(intervalId); // Cleanup on component unmount\n  }, []);\n\n  const capture = async () => {\n    if (webcamRef.current && canvasRef.current) {\n      const imageSrc = webcamRef.current.getScreenshot();\n      try {\n        const response = await axios.post('http://localhost:5000/analyze_emotion', {\n          image: imageSrc.split(',')[1],  // remove data:image/jpeg;base64,\n        });\n\n        if (response.data.error) {\n          console.error(response.data.error);\n        } else {\n          const emotions = response.data;\n          const dominant = Object.keys(emotions).reduce((a, b) => emotions[a] > emotions[b] ? a : b);\n          setDominantEmotion(dominant);\n\n          // Draw green box around the face\n          const context = canvasRef.current.getContext('2d');\n          const { videoWidth, videoHeight } = webcamRef.current.video;\n\n          canvasRef.current.width = videoWidth;\n          canvasRef.current.height = videoHeight;\n\n          context.clearRect(0, 0, videoWidth, videoHeight);\n          context.strokeStyle = 'green';\n          context.lineWidth = 3;\n\n          // Assuming the face occupies the central portion for simplicity\n          const faceX = videoWidth * 0.25;\n          const faceY = videoHeight * 0.25;\n          const faceWidth = videoWidth * 0.5;\n          const faceHeight = videoHeight * 0.5;\n\n          context.strokeRect(faceX, faceY, faceWidth, faceHeight);\n        }\n      } catch (error) {\n        console.error('An error occurred while detecting emotion.', error);\n      }\n    }\n  };\n\n  useEffect(() => {\n    if (webcamRef.current) {\n      onStream(webcamRef.current.video.srcObject);\n    }\n  }, [webcamRef, onStream]);\n\n  return (\n    <div style={{ position: 'relative' }}>\n      <Webcam\n        audio={false}\n        ref={webcamRef}\n        screenshotFormat=\"image/jpeg\"\n      />\n      <canvas\n        ref={canvasRef}\n        style={{ position: 'absolute', top: 0, left: 0 }}\n      />\n      {dominantEmotion && (\n        <div>\n          <h2>Dominant Emotion: {dominantEmotion}</h2>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Camera;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}